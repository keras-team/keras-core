name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
  release:
    types: [created]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        backend: [tensorflow, jax]
    name: Run tests
    runs-on: ubuntu-latest
    env:
      KERAS_BACKEND: ${{ matrix.backend }}
    steps:
      - name: Check for changes in keras_core/applications
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            applications:
              - 'keras_core/applications/**'
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install --upgrade pip setuptools
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          pip install -r requirements.txt --progress-bar off --upgrade
          pip install -e "." --progress-bar off --upgrade
      - name: Test applications with pytest
        if: ${{ steps.filter.outputs.applications == 'true' }}
        run: |
          pythest keras_core/applications
      - name: Test with pytest
        run: |
          pytest keras_core --ignore keras_core/applications

  format:
    name: Check the code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install --upgrade pip setuptools
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          pip install -r requirements.txt --progress-bar off --upgrade
          pip install -e "." --progress-bar off --upgrade
      - name: Lint
        run: bash shell/lint.sh
